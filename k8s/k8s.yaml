apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-jmeter
spec:
  selector:
    matchLabels:
      app: devops-jmeter
  replicas: 1
  template:
    metadata:
      labels:
        app: devops-jmeter
        org: tz
        team: devops
        project: jmeter
        environment: jmeter
    spec:
      imagePullSecrets:
        - name: tz-registrykey
      containers:
      - name: devops-jmeter
        image: ${REPOSITORY_TAG}
        imagePullPolicy: Always
#        volumeMounts:
#        - name: workdir
#          mountPath: /home/csv
#        readinessProbe:
#          httpGet:
#            path: /health
#            port: 8000
#      initContainers:
#      - name: filebeat
#        image: ${REPOSITORY_TAG}
#        command: ["/usr/bin/filebeat", "run", "-e", "-d", "*"]
#        volumeMounts:
#        - name: workdir
#          mountPath: "/home/csv"
        envFrom:
        - configMapRef:
            name: devops-jmeter-configmap
        resources:
          requests:
            memory: '2Gi'
            cpu: '2000m'
          limits:
            memory: '3Gi'
            cpu: '2000m'
#      volumes:
#      - name: workdir
#        emptyDir: {}
      nodeSelector:
        team: devops
        environment: jmeter

---
apiVersion: v1
kind: Service
metadata:
  name: devops-jmeter
spec:
  type: NodePort
  selector:
    app: devops-jmeter
  ports:
    - port: 80
      name: api-80
      targetPort: 8000
#    - port: 443
#      name: api-443
#      targetPort: 443

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: devops-jmeter-configmap
data:
  GIT_BRANCH: ${GIT_BRANCH}
  DB_HOSTNAME: host.docker.internal
  DB_R_HOSTNAME: host.docker.internal

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: devops-jmeter
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
#    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:${AWS_REGION}:${ACCOUNT_ID}:certificate/${CERTIFICATE}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
          { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=3600
spec:
  rules:
  - host: jmeter.devops.${CLUSTER_NAME}.${DOMAIN_NAME}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: devops-jmeter
            port:
              number: 80
  - host: jmeter.devops.${DOMAIN_NAME}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: devops-jmeter
            port:
              number: 80
